<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                            http://www.springframework.org/schema/context    
                            http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                            http://www.springframework.org/schema/mvc    
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                            http://www.springframework.org/schema/aop 
    					    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"> 
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.spring" />
	
	<bean id="filmService" class="com.spring.serviceImpl.FilmServiceImpl"></bean>
	
	<bean id="aspect" class="com.spring.aspect.FilmAscept" scope="prototype"></bean>
	<aop:config proxy-target-class="true">
		<aop:aspect id="concurrentOperationRetry" ref="aspect">
			<aop:pointcut id="idempotentOperation" expression="execution(* com.spring.mapper.*.*(..))" />
			<aop:before pointcut-ref="idempotentOperation" method="doBefore" />
			<aop:after pointcut-ref="idempotentOperation" method="doAfter" />
<!-- 			<aop:around pointcut-ref="idempotentOperation" method="doAround" /> -->
		</aop:aspect>
	</aop:config>
	
	
	
<!-- 	声明使用spring的aop功能 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<context:component-scan base-package="com.spring.aspect"></context:component-scan>
	
	<context:property-placeholder location="classpath:jdbc.properties" />
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="maxActive" value="10" />
		<property name="minIdle" value="5" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource" />
	<property name="mapperLocations" value="classpath:com/spring/mapper/*.xml"></property>
	</bean>

<!-- 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!-- 		<property name="configLocation" value="classpath:mybatiesConfig.xml"></property> -->
<!-- 	</bean> -->


	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.spring.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
 	
<!--  	注册一个监听器 -->
	<bean class="com.spring.aspect.FilmListener"/>
	
</beans>  